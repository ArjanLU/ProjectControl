import '/node_modules/@polymer/polymer/polymer.js'
import { Element } from  '/node_modules/@polymer/polymer/polymer-element.js'
import { PropertyEffects } from  '/node_modules/@polymer/polymer/lib/mixins/property-effects.js'


const htmlTemplate = `
`;

export class IcoDocument extends PropertyEffects(Element) {
    static get template() { return htmlTemplate;} 
    static get observers () {
        return ['_refChanged(path, docid)', '_dataChanged(data.*)'];
    }
    static get properties () {
        return {
           path:{ type:String, value:''},
           docid: { type:String, value:''},
           data:{ type:Object, value:{}, notify:true }
        }
    }
    connectedCallback(){
        super.connectedCallback(); 
        
    }
    _dataChanged(data){
        if (this.data && this.docid){
            console.log("data has changed!!", data);
            var updates = {}; 
            updates[this.path + "/" + this.docid] = this.data;
            firebase.database().ref().update(updates);
        }
    }
    _docChanged(doc) {
       
    }

    _toJSON(){
        return JSON.stringify(this.data);
    }
    _refChanged(){
       
    }
}

customElements.define('ico-document', IcoDocument);